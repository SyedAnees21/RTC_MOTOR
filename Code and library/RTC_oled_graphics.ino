#include <Wire.h>
#include <TimeLib.h>
#include <DS1307RTC.h>
#include "U8glib.h"
#include <EEPROM.h>

U8GLIB_SH1106_128X64 u8g(U8G_I2C_OPT_NONE);  // I2C / TWI 

#define bt_mode   7 
#define bt_set    6
#define bt_ok     5
#define bt_stop   2

int time_m_on = 0;
int time_h_on = 0;
int time_m_off = 0;
int time_h_off= 0;

int relay = 8;
int buzzer = 9;

int t_hour, t_min,t_sec,t_day,t_month,t_year;

int mode=0;
int a;
unsigned long current_time;

void on_hourpage();
void on_minpage();
void off_hourpage();
void off_minpage();
void (*pages[7])(){default_page,on_hourpage,on_minpage,off_hourpage,off_minpage,motor_running,motor_off};

int flag1,flag2,flag3,flag4;

const unsigned char coderatory [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x23, 0xb3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe3, 0xbf, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe3, 0xbf, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe0, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xef, 0x9f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xbf, 0xef, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x7f, 0xf7, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0xfb, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xef, 0xbb, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0xfb, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0xfb, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xf7, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x7f, 0xf7, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xbf, 0xcf, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe7, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x1f, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x78, 0x78, 0xf8, 0xfd, 0xf0, 0x73, 0xf1, 0xe3, 0xf7, 0x30, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xfc, 0xfc, 0xfc, 0xfd, 0xfc, 0x73, 0xf3, 0xf3, 0xfb, 0x70, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xc1, 0x86, 0xc6, 0xc1, 0x9c, 0xf8, 0xc6, 0x1b, 0x1b, 0xe0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x01, 0x81, 0x86, 0xc6, 0xfd, 0xf8, 0xd8, 0xc6, 0x1b, 0xf9, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xc1, 0x86, 0xc6, 0xc1, 0xf9, 0xfc, 0xc6, 0x1b, 0xf0, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xfc, 0xfc, 0xfc, 0xfd, 0x99, 0xfc, 0xc3, 0xf3, 0x38, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x38, 0x78, 0xf8, 0xfd, 0x9f, 0x8c, 0xc1, 0xe3, 0x18, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void setup() {
  Serial.begin(9600);
  Wire.begin();
  
  pinMode(bt_mode,   INPUT_PULLUP);
  pinMode(bt_set,    INPUT_PULLUP);
  pinMode(bt_ok,  INPUT_PULLUP);
  pinMode(bt_stop, INPUT_PULLUP);

  pinMode(relay, OUTPUT);
  digitalWrite(relay, LOW);
  pinMode(buzzer, OUTPUT);

  attachInterrupt(digitalPinToInterrupt(bt_stop), relay_stop, LOW);

  u8g.firstPage();  
  do {
    u8g.drawBitmapP(0,0,16,64,coderatory);
  } while( u8g.nextPage() );
  delay(2000);
}

void loop(){
  RTC_Read();

  if(digitalRead(bt_mode)==0){
  mode=mode+1;
  delay(50);
  }
  if(mode>4)
  {
  mode=0;
  }
  
  u8g.firstPage();
    do  {
      (*pages[mode])();
    } while( u8g.nextPage() );
    
    buttons();
    run_relay();

    if(flag4==1)
    {
     current_time=millis();
    if(millis-current_time>=2000)
    {
      flag4=0;
    }
  }
}

void on_hourpage(){
    u8g.setFont(u8g_font_timB10);
  u8g.setFontPosBaseline();
  u8g.drawStr(0,11,"Time:");
  int a=u8g.getStrWidth("Time:");
  u8g.setPrintPos(a+3,11);
  u8g.print(t_hour);
  a=u8g.getStrWidth("Time: 20");
  u8g.drawStr(a+1,11,":");
  a=u8g.getStrWidth("Time: 20:");
  u8g.setPrintPos(a+2,11);
  u8g.print(t_min);
  a=u8g.getStrWidth("Time: 20:59");
  u8g.drawStr(a+2,11,":");
  a=u8g.getStrWidth("Time: 20:59:");
  u8g.setPrintPos(a+4,11);
  u8g.print(t_sec);
  u8g.setFont(u8g_font_timB10);
  u8g.setFontPosTop();
  u8g.drawStr(0,13,"Date:");
  a=u8g.getStrWidth("Date:");
  u8g.setPrintPos(a+2,13);
  u8g.print(t_day);
  a=u8g.getStrWidth("Date:29");
  u8g.drawStr(a+2,13,"/");
  a=u8g.getStrWidth("Time:29/");
  u8g.setPrintPos(a+3,13);
  u8g.print(t_month);
  a=u8g.getStrWidth("Time: 20/10");
  u8g.drawStr(a+1,13,"/");
  a=u8g.getStrWidth("Time: 20/10/");
  u8g.setPrintPos(a+1,13);
  u8g.print(t_year);
  
    u8g.setFont(u8g_font_ncenR08);
    u8g.setFontPosTop();
    a=u8g.getStrWidth("SET ON TIMING");
    u8g.drawStr((128-a)/2,28,"SET ON TIMING");
    u8g.setFont(u8g_font_helvB10);
    u8g.setPrintPos(34,54);
    u8g.print(time_h_on);
    u8g.drawDisc(36,58,1);
    u8g.drawStr(50,54,":");
    u8g.setFont(u8g_font_helvB10);
    u8g.setPrintPos(64,54);
    u8g.print(time_m_on);
}
void on_minpage(){
  u8g.setFont(u8g_font_timB10);
  u8g.setFontPosBaseline();
  u8g.drawStr(0,11,"Time:");
  int a=u8g.getStrWidth("Time:");
  u8g.setPrintPos(a+3,11);
  u8g.print(t_hour);
  a=u8g.getStrWidth("Time: 20");
  u8g.drawStr(a+1,11,":");
  a=u8g.getStrWidth("Time: 20:");
  u8g.setPrintPos(a+2,11);
  u8g.print(t_min);
  a=u8g.getStrWidth("Time: 20:59");
  u8g.drawStr(a+2,11,":");
  a=u8g.getStrWidth("Time: 20:59:");
  u8g.setPrintPos(a+4,11);
  u8g.print(t_sec);
  u8g.setFont(u8g_font_timB10);
  u8g.setFontPosTop();
  u8g.drawStr(0,13,"Date:");
  a=u8g.getStrWidth("Date:");
  u8g.setPrintPos(a+2,13);
  u8g.print(t_day);
  a=u8g.getStrWidth("Date:29");
  u8g.drawStr(a+2,13,"/");
  a=u8g.getStrWidth("Time:29/");
  u8g.setPrintPos(a+3,13);
  u8g.print(t_month);
  a=u8g.getStrWidth("Time: 20/10");
  u8g.drawStr(a+1,13,"/");
  a=u8g.getStrWidth("Time: 20/10/");
  u8g.setPrintPos(a+1,13);
  u8g.print(t_year);
  
  u8g.setFont(u8g_font_ncenR08);
    u8g.setFontPosTop();
    a=u8g.getStrWidth("SET ON TIMING");
    u8g.drawStr((128-a)/2,28,"SET ON TIMING");
    u8g.setFont(u8g_font_helvB10);
    u8g.setPrintPos(34,54);
    u8g.print(time_h_on);
    u8g.drawStr(50,54,":");
    u8g.setFont(u8g_font_helvB10);
    u8g.setPrintPos(64,54);
    u8g.print(time_m_on);
    u8g.drawDisc(66,58,1);
}
void off_hourpage(){
  u8g.setFont(u8g_font_timB10);
  u8g.setFontPosBaseline();
  u8g.drawStr(0,11,"Time:");
  int a=u8g.getStrWidth("Time:");
  u8g.setPrintPos(a+3,11);
  u8g.print(t_hour);
  a=u8g.getStrWidth("Time: 20");
  u8g.drawStr(a+1,11,":");
  a=u8g.getStrWidth("Time: 20:");
  u8g.setPrintPos(a+2,11);
  u8g.print(t_min);
  a=u8g.getStrWidth("Time: 20:59");
  u8g.drawStr(a+2,11,":");
  a=u8g.getStrWidth("Time: 20:59:");
  u8g.setPrintPos(a+4,11);
  u8g.print(t_sec);
  u8g.setFont(u8g_font_timB10);
  u8g.setFontPosTop();
  u8g.drawStr(0,13,"Date:");
  a=u8g.getStrWidth("Date:");
  u8g.setPrintPos(a+2,13);
  u8g.print(t_day);
  a=u8g.getStrWidth("Date:29");
  u8g.drawStr(a+2,13,"/");
  a=u8g.getStrWidth("Time:29/");
  u8g.setPrintPos(a+3,13);
  u8g.print(t_month);
  a=u8g.getStrWidth("Time: 20/10");
  u8g.drawStr(a+1,13,"/");
  a=u8g.getStrWidth("Time: 20/10/");
  u8g.setPrintPos(a+1,13);
  u8g.print(t_year);
  
  u8g.setFont(u8g_font_ncenR08);
    u8g.setFontPosTop();
    a=u8g.getStrWidth("SET OFF TIMING");
    u8g.drawStr((128-a)/2,28,"SET OFF TIMING");
    u8g.setFont(u8g_font_helvB10);
    u8g.setPrintPos(34,54);
    u8g.print(time_h_off);
    u8g.drawStr(50,54,":");
    u8g.setFont(u8g_font_helvB10);
    u8g.setPrintPos(64,54);
    u8g.print(time_m_off);
    u8g.drawDisc(36,58,1);
}
void off_minpage(){
  u8g.setFont(u8g_font_timB10);
  u8g.setFontPosBaseline();
  u8g.drawStr(0,11,"Time:");
  int a=u8g.getStrWidth("Time:");
  u8g.setPrintPos(a+3,11);
  u8g.print(t_hour);
  a=u8g.getStrWidth("Time: 20");
  u8g.drawStr(a+1,11,":");
  a=u8g.getStrWidth("Time: 20:");
  u8g.setPrintPos(a+2,11);
  u8g.print(t_min);
  a=u8g.getStrWidth("Time: 20:59");
  u8g.drawStr(a+2,11,":");
  a=u8g.getStrWidth("Time: 20:59:");
  u8g.setPrintPos(a+4,11);
  u8g.print(t_sec);
  u8g.setFont(u8g_font_timB10);
  u8g.setFontPosTop();
  u8g.drawStr(0,13,"Date:");
  a=u8g.getStrWidth("Date:");
  u8g.setPrintPos(a+2,13);
  u8g.print(t_day);
  a=u8g.getStrWidth("Date:29");
  u8g.drawStr(a+2,13,"/");
  a=u8g.getStrWidth("Time:29/");
  u8g.setPrintPos(a+3,13);
  u8g.print(t_month);
  a=u8g.getStrWidth("Time: 20/10");
  u8g.drawStr(a+1,13,"/");
  a=u8g.getStrWidth("Time: 20/10/");
  u8g.setPrintPos(a+1,13);
  u8g.print(t_year);
  
  u8g.setFont(u8g_font_ncenR08);
    u8g.setFontPosTop();
    a=u8g.getStrWidth("SET OFF TIMING");
    u8g.drawStr((128-a)/2,28,"SET OFF TIMING");
    u8g.setFont(u8g_font_helvB10);
    u8g.setPrintPos(34,54);
    u8g.print(time_h_off);
    u8g.drawStr(50,54,":");
    u8g.setFont(u8g_font_helvB10);
    u8g.setPrintPos(64,54);
    u8g.print(time_m_off);
    u8g.drawDisc(66,58,1);
  }
void default_page(){
  u8g.setFont(u8g_font_timB10);
  u8g.setFontPosBaseline();
  u8g.drawStr(0,11,"Time:");
  int a=u8g.getStrWidth("Time:");
  u8g.setPrintPos(a+3,11);
  u8g.print(t_hour);
  a=u8g.getStrWidth("Time: 20");
  u8g.drawStr(a+1,11,":");
  a=u8g.getStrWidth("Time: 20:");
  u8g.setPrintPos(a+2,11);
  u8g.print(t_min);
  a=u8g.getStrWidth("Time: 20:59");
  u8g.drawStr(a+2,11,":");
  a=u8g.getStrWidth("Time: 20:59:");
  u8g.setPrintPos(a+4,11);
  u8g.print(t_sec);
  u8g.setFont(u8g_font_timB10);
  u8g.setFontPosTop();
  u8g.drawStr(0,13,"Date:");
  a=u8g.getStrWidth("Date:");
  u8g.setPrintPos(a+2,13);
  u8g.print(t_day);
  a=u8g.getStrWidth("Date:29");
  u8g.drawStr(a+2,13,"/");
  a=u8g.getStrWidth("Time:29/");
  u8g.setPrintPos(a+3,13);
  u8g.print(t_month);
  a=u8g.getStrWidth("Time: 20/10");
  u8g.drawStr(a+1,13,"/");
  a=u8g.getStrWidth("Time: 20/10/");
  u8g.setPrintPos(a+1,13);
  u8g.print(t_year);

  u8g.setFont(u8g_font_ncenR08);
  u8g.setFontPosTop();
  a=u8g.getStrWidth("ON TIME:");
  u8g.drawStr(0,32,"ON TIME:");
  u8g.setPrintPos(a+4,32);
  u8g.print(EEPROM.read(1));
  a=u8g.getStrWidth("ON TIME:00");
  u8g.drawStr(a+4,32,"hr");
  a=u8g.getStrWidth("ON TIME:00hr");
  u8g.setPrintPos(a+6,32);
  u8g.print(EEPROM.read(2));
  a=u8g.getStrWidth("ON TIME:00hr 00");
  u8g.drawStr(a+4,32,"m");

  u8g.setFont(u8g_font_ncenR08);
  u8g.setFontPosTop();
  a=u8g.getStrWidth("OFF TIME:");
  u8g.drawStr(0,42,"OFF TIME:");
  u8g.setPrintPos(a+4,42);
  u8g.print(EEPROM.read(3));
  a=u8g.getStrWidth("OFF TIME:00");
  u8g.drawStr(a+4,42,"hr");
  a=u8g.getStrWidth("OFF TIME:00hr");
  u8g.setPrintPos(a+6,42);
  u8g.print(EEPROM.read(4));
  a=u8g.getStrWidth("OFF TIME:00hr 00");
  u8g.drawStr(a+4,42,"m");

  if(flag4==1){
    u8g.setFont(u8g_font_ncenR08);
    u8g.setFontPosTop();
    a=u8g.getStrWidth("TIME HAS BEEN SET");
    u8g.drawStr((128-a)/2,35,"TIME HAS BEEN SET");
  }
}

void motor_running(){
  u8g.setFont(u8g_font_timB10);
  u8g.setFontPosBaseline();
  u8g.drawStr(0,11,"Time:");
  int a=u8g.getStrWidth("Time:");
  u8g.setPrintPos(a+3,11);
  u8g.print(t_hour);
  a=u8g.getStrWidth("Time: 20");
  u8g.drawStr(a+1,11,":");
  a=u8g.getStrWidth("Time: 20:");
  u8g.setPrintPos(a+2,11);
  u8g.print(t_min);
  a=u8g.getStrWidth("Time: 20:59");
  u8g.drawStr(a+2,11,":");
  a=u8g.getStrWidth("Time: 20:59:");
  u8g.setPrintPos(a+4,11);
  u8g.print(t_sec);
  u8g.setFont(u8g_font_timB10);
  u8g.setFontPosTop();
  u8g.drawStr(0,13,"Date:");
  a=u8g.getStrWidth("Date:");
  u8g.setPrintPos(a+2,13);
  u8g.print(t_day);
  a=u8g.getStrWidth("Date:29");
  u8g.drawStr(a+2,13,"/");
  a=u8g.getStrWidth("Time:29/");
  u8g.setPrintPos(a+3,13);
  u8g.print(t_month);
  a=u8g.getStrWidth("Time: 20/10");
  u8g.drawStr(a+1,13,"/");
  a=u8g.getStrWidth("Time: 20/10/");
  u8g.setPrintPos(a+1,13);
  u8g.print(t_year);

  u8g.setFont(u8g_font_ncenR08);
  u8g.setFontPosTop();
  a=u8g.getStrWidth("MOTOR IS RUNNING");
  u8g.drawStr((128-a)/2,35,"MOTOR IS RUNNING");
}

void motor_off(){
  u8g.setFont(u8g_font_timB10);
  u8g.setFontPosBaseline();
  u8g.drawStr(0,11,"Time:");
  int a=u8g.getStrWidth("Time:");
  u8g.setPrintPos(a+3,11);
  u8g.print(t_hour);
  a=u8g.getStrWidth("Time: 20");
  u8g.drawStr(a+1,11,":");
  a=u8g.getStrWidth("Time: 20:");
  u8g.setPrintPos(a+2,11);
  u8g.print(t_min);
  a=u8g.getStrWidth("Time: 20:59");
  u8g.drawStr(a+2,11,":");
  a=u8g.getStrWidth("Time: 20:59:");
  u8g.setPrintPos(a+4,11);
  u8g.print(t_sec);
  u8g.setFont(u8g_font_timB10);
  u8g.setFontPosTop();
  u8g.drawStr(0,13,"Date:");
  a=u8g.getStrWidth("Date:");
  u8g.setPrintPos(a+2,13);
  u8g.print(t_day);
  a=u8g.getStrWidth("Date:29");
  u8g.drawStr(a+2,13,"/");
  a=u8g.getStrWidth("Time:29/");
  u8g.setPrintPos(a+3,13);
  u8g.print(t_month);
  a=u8g.getStrWidth("Time: 20/10");
  u8g.drawStr(a+1,13,"/");
  a=u8g.getStrWidth("Time: 20/10/");
  u8g.setPrintPos(a+1,13);
  u8g.print(t_year);

  u8g.setFont(u8g_font_ncenR08);
  u8g.setFontPosTop();
  a=u8g.getStrWidth("MOTOR IS SET OFF");
  u8g.drawStr((128-a)/2,35,"MOTOR IS SET OFF");
}

void print2digits(int number) {
  if (number >= 0 && number < 10) {
    Serial.write('0');
  }
  Serial.print(number);
}

void RTC_Read(){
  tmElements_t tm;
  Wire.beginTransmission(0x68);
    if (RTC.read(tm)) {
    Serial.print("Ok, Time = ");
    print2digits(tm.Hour);
    t_hour=tm.Hour;
    Serial.write(':');
    print2digits(tm.Minute);
    t_min=tm.Minute;
    Serial.write(':');
    print2digits(tm.Second);
    t_sec=tm.Second;
    Serial.print(", Date (D/M/Y) = ");
    Serial.print(tm.Day);
    Serial.write('/');
    t_day=tm.Day;
    Serial.print(tm.Month);
    Serial.write('/');
    t_month=tm.Month;
    Serial.print(tmYearToCalendar(tm.Year));
    t_year=tmYearToCalendar(tm.Year);
    Serial.println();
  } else {
    if (RTC.chipPresent()) {
      Serial.println("The DS1307 is stopped.  Please run the SetTime");
      Serial.println("example to initialize the time and begin running.");
      Serial.println();
    } else {
      Serial.println("DS1307 read error!  Please check the circuitry.");
      Serial.println();
    }
    delay(9000);
  }
  Wire.endTransmission(0x68);
  
}

void buttons(){
  if(digitalRead(bt_set)==0 && mode==1)
  {
    //set on time hour
    time_h_on=time_h_on+1;
    if(time_h_on>=24)
    {
      time_h_on=0;
      
    }  
  }
  if(digitalRead(bt_set)==0 && mode==2)
  {
    //set on time minute
    time_m_on=time_m_on+1;
    if(time_m_on>=60)
    {
      time_m_on=0;
    } 
  }
  if(digitalRead(bt_set)==0 && mode==3)
  {
    //set off time hour
    time_h_off=time_h_off+1;
    if(time_h_off>=24)
    {
      time_h_off=0;
    }
  }
  if(digitalRead(bt_set)==0 && mode==4)
  {
    //set off time minute
    time_m_off=time_m_off+1;
    if(time_m_off>=60)
    {
      time_h_off=0;
    }
  }
  if(digitalRead(bt_ok)==0)
  {
    flag1=1;
    mode=0;
    EEPROM.write(1,time_h_on);
    EEPROM.write(2,time_m_on);
    EEPROM.write(3,time_h_off);
    EEPROM.write(4,time_m_off);
  }
}

void run_relay(){
  if(flag1==1)
  {
    if(t_hour==EEPROM.read(1) && t_min==EEPROM.read(2))
    {
      digitalWrite(relay,HIGH);
      if(t_sec==1)
      {
        digitalWrite(buzzer,HIGH);
        delay(50);
        digitalWrite(buzzer,LOW);
      }
    }
    
    if(t_hour==EEPROM.read(3) && t_min==EEPROM.read(4))
    {
      digitalWrite(relay,LOW);
      if(t_sec==1)
      {
        digitalWrite(buzzer,HIGH);
        delay(50);
        digitalWrite(buzzer,LOW);
      }     
    }
  }
}
void relay_stop(){
  flag1=0;
  mode=0;
  digitalWrite(relay,LOW);
  EEPROM.write(1,0);
  EEPROM.write(2,0);
  EEPROM.write(3,0);
  EEPROM.write(4,0);
  
}
